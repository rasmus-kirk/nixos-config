# === Plugins === #

# Kak-lsp
eval %sh{kak-lsp --kakoune -s $kak_session}  # Not needed if you load it with plug.kak.
set global lsp_cmd "kak-lsp -s %val{session} -vvv --log /tmp/kak-lsp.log"
hook global WinSetOption filetype=(python|go|javascript|typescript|c|cpp|hs|nix|tex) %{
	lsp-diagnostic-lines-enable global
	lsp-enable-window
}
map global user l %{: enter-user-mode lsp<ret>} -docstring "LSP mode"

## Rust lsp
#hook global WinSetOption filetype=rust %{
#	# Enable LSP
#	lsp-enable-window
#
#	# Auto-formatting on save
#	hook window BufWritePre .* lsp-formatting-sync
#
#	# Configure inlay hints (only on save)
#	hook window -group rust-inlay-hints BufWritePost .* rust-analyzer-inlay-hints
#	hook -once -always window WinSetOption filetype=.* %{
#		remove-hooks window rust-inlay-hints
#	}
#}

# Rainbow parenthesis (reload on write)
require-module rainbow
hook global BufWritePre .* rainbow

# === General === #

# Colorscheme
colorscheme gruvbox-dark

# Enable relative line numbers
add-highlighter global/ number-lines -relative -hlcursor

# Highlight whitespace
add-highlighter global/ show-whitespaces -spc \  -lf ⌄ 

# Enable wrapping
addhl global/ wrap -word -marker ₪

set global autowrap_column 73
map global user w '|fmt -w $kak_opt_autowrap_column<ret>' -docstring "Wrap to $kak_opt_autowrap_column columns"
add-highlighter global/ column '%sh{echo $(($kak_opt_autowrap_column + 1))}' default,black

# Indentation
set-option global tabstop 2
set-option global indentwidth 0

# User mappings
map -docstring "Yank the selection into the clipboard." global user y "<a-|> wl-copy <ret>"
map -docstring "Paste the clipboard (append)." global user p "<a-!> wl-paste<ret>"
map -docstring "Paste the clipboard (insert)." global user P "<!> wl-paste<ret>"
map -docstring "Replace with the clipboard (insert)." global user R "d<!> wl-paste<ret>"
map -docstring "Replace all space indents with tabs." global user @ "s^ +<ret><a-@>;xs\t\t<ret>;d"

# Differentiate insert and normal mode using colors
set-face global PrimarySelection white,blue+F
set-face global SecondarySelection black,blue+F
set-face global PrimaryCursor black,bright-cyan+F
set-face global SecondaryCursor black,bright-blue+F
set-face global PrimaryCursorEol black,bright-cyan
set-face global SecondaryCursorEol black,bright-blue

hook global ModeChange ".*:insert" %{
	set-face window PrimarySelection white,green+F
	set-face window SecondarySelection black,green+F
	set-face window PrimaryCursor black,bright-yellow+F
	set-face window SecondaryCursor black,bright-green+F
	set-face window PrimaryCursorEol black,bright-yellow
	set-face window SecondaryCursorEol black,bright-green
}

hook global ModeChange ".*:normal" %{
	unset-face window PrimarySelection
	unset-face window SecondarySelection
	unset-face window PrimaryCursor
	unset-face window SecondaryCursor
	unset-face window PrimaryCursorEol
	unset-face window SecondaryCursorEol
}
